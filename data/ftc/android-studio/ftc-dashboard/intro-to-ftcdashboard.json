{
  "title": "Introduction to FTCDashboard",
  "sections": [
    {
      "type": "text",
      "title": "What is FTCDashboard?",
      "content": "FTCDashboard is a powerful web-based dashboard that provides real-time robot monitoring and control capabilities for FTC teams. Unlike basic telemetry that only shows text output, FTCDashboard offers a rich graphical interface with live data plotting, field visualization, configuration management, and remote control features."
    },
    {
      "type": "rules-box",
      "title": "Key Benefits of FTCDashboard",
      "items": [
        "Real-time data visualization with live graphs and charts",
        "Field view for robot position tracking and path visualization",
        "Runtime configuration without code recompilation",
        "Remote OpMode control and custom buttons",
        "Camera streaming integration",
        "Multi-device support for team collaboration"
      ]
    },
    {
      "type": "text",
      "title": "Why Use FTCDashboard?",
      "content": "Traditional telemetry provides basic text output, but FTCDashboard transforms this into a comprehensive monitoring and control system. It's particularly valuable for debugging autonomous programs, tuning PID controllers, visualizing robot movement, and providing real-time feedback during testing and competition."
    },
    {
      "type": "code",
      "title": "Basic FTCDashboard Setup",
      "content": "To use FTCDashboard, you need to add the library dependency to your project and initialize the dashboard in your OpMode. Here's the basic setup:",
              "code": "// Add to your build.gradle file\ndependencies {\n    implementation 'com.acmerobotics.dashboard:dashboard:0.4.12'\n}\n\n// In your OpMode\nimport com.acmerobotics.dashboard.FtcDashboard;\nimport com.acmerobotics.dashboard.config.Config;\nimport com.acmerobotics.dashboard.telemetry.MultipleTelemetry;\n\n@Config\npublic class BasicDashboardOpMode extends OpMode {\n    private FtcDashboard dashboard;\n    private MultipleTelemetry telemetry;\n    \n    @Override\n    public void init() {\n        // Initialize the dashboard\n        dashboard = FtcDashboard.getInstance();\n        \n        // Create multiple telemetry to send to both Driver Station and Dashboard\n        telemetry = new MultipleTelemetry(this.telemetry, dashboard.getTelemetry());\n        \n        // Send initial telemetry\n        telemetry.addData(\"Status\", \"Initialized\");\n        telemetry.update();\n    }\n    \n    @Override\n    public void loop() {\n        // Your robot control code here\n        \n        // Send telemetry to both Driver Station and Dashboard\n        telemetry.addData(\"Loop Time\", \"%.2f seconds\", getRuntime());\n        telemetry.update();\n    }\n}"
    },
    {
      "type": "text",
      "title": "Installation and Setup",
      "content": "FTCDashboard is installed as a Gradle dependency in your Android Studio project. The library automatically sets up a web server on your robot that can be accessed from any device on the same network."
    },
    {
      "type": "rules-box",
      "title": "Installation Steps",
      "items": [
        "Add the dependency to your app's build.gradle file",
        "Sync your project to download the library",
        "Import the necessary classes in your OpMode",
        "Initialize FtcDashboard in your init() method",
        "Use MultipleTelemetry to send data to both Driver Station and Dashboard"
      ]
    },
    {
      "type": "code",
      "title": "Gradle Dependency Configuration",
      "content": "Add this dependency to your app-level build.gradle file:",
              "code": "dependencies {\n    // Other dependencies...\n    implementation 'com.acmerobotics.dashboard:dashboard:0.4.12'\n}\n\n// Make sure you have the correct repositories\nrepositories {\n    google()\n    mavenCentral()\n    maven { url = \"https://maven.brott.dev/\" }\n}"
    },
    {
      "type": "text",
      "title": "Dashboard Structure and Interface",
      "content": "The FTCDashboard web interface is organized into several key sections, each providing different functionality for robot monitoring and control."
    },
    {
      "type": "rules-box",
      "title": "Dashboard Interface Sections",
      "items": [
        "Telemetry Panel: Real-time data display and plotting",
        "Field View: Robot position and path visualization",
        "Configuration Panel: Runtime variable adjustment",
        "OpMode Controls: Remote start/stop and custom buttons",
        "Camera Stream: Live video feed from robot cameras",
        "Network Status: Connection information and diagnostics"
      ]
    },
    {
      "type": "text",
      "title": "Connection and Access",
      "content": "FTCDashboard creates a web server on your robot that can be accessed from any device on the same network. The dashboard is typically accessible at the robot's IP address on port 8080."
    },
    {
      "type": "rules-box",
      "title": "Accessing the Dashboard",
      "items": [
        "Ensure your device is on the same network as the robot",
        "Find the robot's IP address (usually displayed on Driver Station)",
        "Open a web browser and navigate to http://ROBOT_IP:8080",
        "The dashboard interface will load automatically",
        "Multiple devices can connect simultaneously"
      ]
    },
    {
      "type": "code",
      "title": "Network Configuration Example",
      "content": "Here's how to configure network settings and handle connection issues:",
              "code": "// In your OpMode, you can check dashboard connection status\npublic class NetworkAwareOpMode extends OpMode {\n    private FtcDashboard dashboard;\n    \n    @Override\n    public void init() {\n        dashboard = FtcDashboard.getInstance();\n        \n        // Check if dashboard is connected\n        if (dashboard.getWebServer().isStarted()) {\n            telemetry.addData(\"Dashboard\", \"Running on port 8080\");\n            telemetry.addData(\"Access URL\", \"http://\" + getLocalIpAddress() + \":8080\");\n        } else {\n            telemetry.addData(\"Dashboard\", \"Failed to start\");\n        }\n        telemetry.update();\n    }\n    \n    private String getLocalIpAddress() {\n        try {\n            // Get the robot's IP address\n            return InetAddress.getLocalHost().getHostAddress();\n        } catch (Exception e) {\n            return \"Unknown\";\n        }\n    }\n}"
    },
    {
      "type": "exercise-box",
      "title": "Practice Exercise: Basic Dashboard Setup",
      "description": "Create a simple OpMode that demonstrates basic FTCDashboard functionality.",
      "tasks": [
        "Add the FTCDashboard dependency to your project",
        "Create a new OpMode that initializes the dashboard",
        "Send telemetry data to both Driver Station and Dashboard",
        "Access the dashboard from a web browser",
        "Verify that data appears in both the Driver Station and web interface"
      ],
      "content": "// Your OpMode should include:\n// 1. Dashboard initialization\n// 2. MultipleTelemetry setup\n// 3. Regular telemetry updates\n// 4. Network status display"
    },
    {
      "type": "rules-box",
      "title": "Troubleshooting Common Issues",
      "items": [
        "Dashboard not accessible: Check network connection and firewall settings",
        "No data appearing: Ensure MultipleTelemetry is used and telemetry.update() is called",
        "Build errors: Verify Gradle dependency is correctly added and project is synced",
        "Port conflicts: Dashboard uses port 8080 by default, ensure it's not blocked",
        "Performance issues: Limit telemetry update frequency to avoid overwhelming the interface"
      ]
    },
    {
      "type": "link-grid",
      "title": "Related Topics and Resources",
      "links": [
        "<a href=\"https://acmerobotics.github.io/ftc-dashboard/\" target=\"_blank\">Official FTCDashboard Documentation</a>",
        "<a href=\"https://acmerobotics.github.io/ftc-dashboard/getting-started\" target=\"_blank\">FTCDashboard Getting Started Guide</a>",
        "<a href=\"https://acmerobotics.github.io/ftc-dashboard/features\" target=\"_blank\">FTCDashboard Features Overview</a>",
        "<a href=\"../telemetry-logging.json\">Telemetry Logging Basics</a>",
        "<a href=\"../sensors/sensors.json\">Sensors Overview</a>",
        "<a href=\"../motors/basic-motor-control.json\">Basic Motor Control</a>"
      ]
    }
  ]
}
