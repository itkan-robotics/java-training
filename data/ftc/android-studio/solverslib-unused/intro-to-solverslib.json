{
  "title": "Introduction to SolversLib",
  "sections": [
    {
      "type": "text",
      "title": "What is SolversLib?",
      "content": "<p><strong>SolversLib</strong> is a modern, community-driven robotics programming library for FTC, designed as an updated and maintained fork of the popular FTCLib. It brings advanced programming patterns and features inspired by FRC's WPILib to the FTC ecosystem, making it easier for both new and experienced teams to write modular, maintainable, and powerful robot code.</p><p>SolversLib is fully compatible with most existing FTCLib code (except for FTCLib's vision module), so you can upgrade your codebase with minimal changes. The library is actively maintained and regularly merges improvements from both SolversLib and FTCLib communities.</p>"
    },
    {
      "type": "text",
      "title": "Why Use SolversLib Over FTCLib?",
      "content": "<p>While FTCLib was a major step forward for FTC programming, SolversLib takes it further by offering:</p><ul><li><strong>Active Maintenance:</strong> SolversLib is updated more frequently, with new features and bug fixes merged from both FTCLib and SolversLib contributors.</li><li><strong>Broader Community Support:</strong> SolversLib is built on community contributions, making it more responsive to the needs of FTC teams.</li><li><strong>Better Compatibility:</strong> Designed to be a drop-in replacement for FTCLib (except vision), so you can upgrade existing projects easily.</li><li><strong>Improved Documentation:</strong> The <a href='https://docs.seattlesolvers.com/' target='_blank'>official SolversLib documentation</a> is comprehensive and regularly updated.</li></ul>"
    },
    {
      "type": "text",
      "title": "Added Functionalities and Features",
      "content": "<ul><li><strong>Command-Based Programming:</strong> Inspired by WPILib, SolversLib brings a powerful command-based architecture to FTC, making code more modular and testable.</li><li><strong>Subsystem Abstractions:</strong> Logical grouping of hardware and code for easier management and reuse.</li><li><strong>Advanced Pathing Support:</strong> Native support for modules like PedroPathing for advanced autonomous routines.</li><li><strong>Utility Classes:</strong> Timers, PID controllers, and more, all designed for FTC use cases.</li><li><strong>Easy Transition:</strong> Tools and guides for migrating from FTCLib, including import replacement scripts and Gradle setup instructions.</li></ul>"
    },
    {
      "type": "emphasis-box",
      "title": "Key Takeaways",
      "content": "<ul><li>SolversLib is a modern, community-driven FTC library and a drop-in replacement for FTCLib (except vision).</li><li>It offers more features, better support, and a command-based architecture for advanced robot code.</li><li>Upgrading from FTCLib is straightforward, and the documentation provides migration guides and examples.</li></ul>"
    },
    {
      "type": "link-grid",
      "title": "Official Documentation & Resources",
      "links": [
        { "title": "SolversLib Documentation", "url": "https://docs.seattlesolvers.com/" },
        { "title": "SolversLib GitHub Repository", "url": "https://github.com/FTC-23511/SolversLib" },
        { "title": "Installation Guide", "url": "https://docs.seattlesolvers.com/installation" }
      ]
    }
  ]
} 