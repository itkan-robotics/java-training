{
  "title": "goBILDA Pinpoint Odometry",
  "sections": [
    {
      "type": "text",
      "title": "What is goBILDA Pinpoint?",
      "content": "goBILDA Pinpoint is a commercial odometry solution designed for FTC robots. It provides a ready-to-use hardware kit with three encoders and wheels, making it easier to implement accurate odometry without custom fabrication."
    },
    {
      "type": "text",
      "title": "Hardware Overview and Installation",
      "content": "The Pinpoint kit includes three encoder-equipped wheels mounted in a standard three-wheel odometry configuration. Proper installation is crucial for accuracyâ€”follow the manufacturer's instructions for mounting and alignment. <br><br>For more details, see the <a href=\"https://www.gobilda.com/pinpoint-odometry-computer-imu-sensor-fusion-for-2-wheel-odometry/\" target=\"_blank\">goBILDA Pinpoint Product Page</a>."
    },
    {
      "type": "text",
      "title": "Integrating Pinpoint with Android Studio",
      "content": "To use Pinpoint in your Android Studio project, you can utilize the <a href=\"https://javadoc.io/doc/org.firstinspires.ftc/Hardware/latest/com/qualcomm/hardware/gobilda/GoBildaPinpointDriver.html\" target=\"_blank\">GoBildaPinpointDriver</a> class provided in the FTC SDK. This class helps you interface with the Pinpoint hardware and retrieve encoder values for odometry calculations."
    },
    {
      "type": "code",
      "title": "Sample Initialization and Usage in Android Studio",
      "content": "This code snippet demonstrates how to initialize and use the GoBildaPinpointDriver in your op mode:",
      "code": "import com.qualcomm.hardware.gobilda.GoBildaPinpointDriver;\n\nGoBildaPinpointDriver pinpoint;\n\n@Override\npublic void runOpMode() {\n    pinpoint = hardwareMap.get(GoBildaPinpointDriver.class, \"pinpoint\");\n    waitForStart();\n    while (opModeIsActive()) {\n        int leftTicks = pinpoint.getLeftEncoder().getCurrentPosition();\n        int rightTicks = pinpoint.getRightEncoder().getCurrentPosition();\n        int centerTicks = pinpoint.getCenterEncoder().getCurrentPosition();\n        telemetry.addData(\"Left Encoder\", leftTicks);\n        telemetry.addData(\"Right Encoder\", rightTicks);\n        telemetry.addData(\"Center Encoder\", centerTicks);\n        telemetry.update();\n    }\n}"
    },
    {
      "type": "text",
      "title": "Best Practices and Maintenance",
      "content": "To ensure long-term reliability, regularly check the alignment and cleanliness of the Pinpoint wheels. Inspect for debris or wear, and verify that encoder cables are secure. Periodically recalibrate your odometry constants for best accuracy."
    },
    {
      "type": "text",
      "title": "Comparing Pinpoint to Custom Odometry Solutions",
      "content": "Pinpoint offers a plug-and-play solution with consistent build quality, saving time compared to custom odometry. However, custom solutions may offer more flexibility for unique robot designs. Consider your team's needs, budget, and resources when choosing between Pinpoint and DIY options."
    },
    {
      "type": "link-grid",
      "title": "Further Reading",
      "content": [
        {
          "label": "GoBildaPinpointDriver Javadoc",
          "url": "https://javadoc.io/doc/org.firstinspires.ftc/Hardware/latest/com/qualcomm/hardware/gobilda/GoBildaPinpointDriver.html"
        },
        {
          "label": "goBILDA Pinpoint Product Page",
          "url": "https://www.gobilda.com/pinpoint-odometry-computer-imu-sensor-fusion-for-2-wheel-odometry/"
        },
        {
          "label": "goBILDA Example Code",
          "url": "https://github.com/goBILDA-Official/FtcRobotController-Add-Pinpoint/tree/goBILDA-Odometry-Driver/TeamCode/src/main/java/org/firstinspires/ftc/teamcode"
        }
      ]
    },
    {
      "type": "exercise-box",
      "title": "Practice Exercise",
      "description": "Write an op mode that initializes the GoBildaPinpointDriver and displays all three encoder values on telemetry. Then, try moving your robot and observe how the encoder values change.",
      "tasks": [
        "Initialize GoBildaPinpointDriver in your op mode.",
        "Display left, right, and center encoder values on telemetry.",
        "Move the robot and observe the encoder changes."
      ]
    }
  ]
}
