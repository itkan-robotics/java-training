{
  "title": "Pedro Localization",
  "sections": [
    {
      "type": "text",
      "title": "Understanding Localization in Pedro Pathing",
      "content": "Localization is the process of determining your robot's position and orientation on the field. In Pedro Pathing, accurate localization is crucial for the robot to follow paths correctly and maintain precise positioning throughout autonomous routines. Without proper localization, your robot won't be able to execute the planned trajectories accurately."
    },
    {
      "type": "text",
      "title": "Why Localization Matters",
      "content": "Pedro Pathing relies on knowing the robot's exact position to generate and follow BÃ©zier curves effectively. The system needs continuous feedback about where the robot is located to make dynamic adjustments and ensure smooth path following. Poor localization will result in the robot drifting off course or failing to reach target positions."
    },
    {
      "type": "list",
      "title": "Odometry and Sensor Fusion Approaches",
      "content": [
        "Dead Wheel Encoders: Provide precise position tracking without wheel slip affecting measurements",
        "IMU Integration: Combines gyroscope and accelerometer data for heading and movement detection",
        "Sensor Fusion: Combines multiple sensor inputs for more accurate position estimation",
        "Visual Odometry: Uses camera data to track movement and position changes"
      ]
    },
    {
      "type": "text",
      "title": "Setting Up Localization for Your Robot",
      "content": "To set up localization for Pedro Pathing, you'll need to configure your robot's sensors and create the necessary constants files. This involves setting up your odometry system, calibrating sensor values, and configuring the localization parameters in Pedro Pathing's constants files."
    },
    {
      "type": "code",
      "title": "Basic Localization Setup",
      "content": "Here's a basic example of how to set up localization constants for Pedro Pathing:",
      "code": "// In your LConstants file (Localization Constants)\npublic class LConstants {\n    // Robot dimensions for odometry calculations\n    public static final double TRACK_WIDTH = 13.5; // Distance between left and right wheels\n    public static final double FORWARD_OFFSET = 6.0; // Distance from center to front wheel\n    \n    // Encoder ticks per revolution\n    public static final double TICKS_PER_REV = 537.6;\n    public static final double WHEEL_DIAMETER = 1.88976; // inches\n    \n    // Calculate encoder ticks per inch\n    public static final double TICKS_PER_INCH = TICKS_PER_REV / (WHEEL_DIAMETER * Math.PI);\n}"
    },
    {
      "type": "text",
      "title": "Calibrating Your Localization System",
      "content": "After setting up your localization hardware and constants, you'll need to calibrate the system. This involves running calibration op modes to fine-tune the parameters and ensure accurate position tracking. The Pedro Pathing quickstart includes tuners specifically designed for this purpose."
    },
    {
      "type": "emphasis-box",
      "title": "Reference",
      "content": "For more detailed information on localization setup and calibration, see the <a href=\"https://pedropathing.com/pedro/overview.html\" target=\"_blank\">Pedro Pathing Overview</a> and the quickstart project documentation."
    }
  ]
}
