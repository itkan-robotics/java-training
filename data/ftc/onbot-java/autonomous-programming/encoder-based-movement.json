{
  "title": "Encoder-Based Autonomous Movement",
  "sections": [
    {
      "type": "text",
      "title": "What are Motor Encoders?",
      "content": "Motor encoders are sensors that measure how far a wheel or motor has turned. They allow your robot to move precise distances and turn exact angles. <a href=\"https://gm0.org/en/latest/docs/software/tutorials/encoders.html\" target=\"_blank\">gm0: Encoders</a> <a href=\"https://docs.revrobotics.com/duo-control/programming/using-encoders\" target=\"_blank\">REV Docs: Using Encoders</a>"
    },
    {
      "type": "text",
      "title": "Advantages of Encoder-Based Movement",
      "content": "Encoders are more reliable than time-based control for moving set distances or turning. They help your robot perform consistent autonomous routines. <a href=\"https://gm0.org/en/latest/docs/software/tutorials/encoders.html#why-use-encoders\" target=\"_blank\">gm0: Why Use Encoders?</a>"
    },
    {
      "type": "text",
      "title": "Programming with Encoders in FTC SDK",
      "content": "To use encoders, reset them before starting, set target positions, and use RUN_TO_POSITION mode. Check progress with isBusy(). <a href=\"https://ftc-docs.firstinspires.org/en/latest/programming_resources/motors/using-encoders.html\" target=\"_blank\">FTC Docs: Using Encoders</a> <a href=\"https://gm0.org/en/latest/docs/software/tutorials/encoders.html#programming-with-encoders\" target=\"_blank\">gm0: Programming with Encoders</a>"
    },
    {
      "type": "code",
      "title": "Drive Forward with Encoders",
      "language": "java",
      "content": "int target = 1000; // encoder ticks\nleftMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\nrightMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\nleftMotor.setTargetPosition(target);\nrightMotor.setTargetPosition(target);\nleftMotor.setMode(DcMotor.RunMode.RUN_TO_POSITION);\nrightMotor.setMode(DcMotor.RunMode.RUN_TO_POSITION);\nleftMotor.setPower(0.5);\nrightMotor.setPower(0.5);\nwhile (leftMotor.isBusy() && rightMotor.isBusy() && opModeIsActive()) {\n    telemetry.addData(\"Left\", leftMotor.getCurrentPosition());\n    telemetry.addData(\"Right\", rightMotor.getCurrentPosition());\n    telemetry.update();\n}\nleftMotor.setPower(0);\nrightMotor.setPower(0);"
    },
    {
      "type": "text",
      "title": "Calculating Distances and Ticks",
      "content": "To move a specific distance, convert inches or centimeters to encoder ticks using your wheel size and gear ratio. <a href=\"https://gm0.org/en/latest/docs/software/tutorials/encoders.html#calculating-distance\" target=\"_blank\">gm0: Calculating Distance with Encoders</a>"
    },
    {
      "type": "code",
      "title": "Distance to Ticks Formula (Java)",
      "language": "java",
      "content": "double wheelDiameterMM = 90.0;\ndouble countsPerRev = 560; // Example for REV HD Hex Motor\ndouble countsPerMM = countsPerRev / (wheelDiameterMM * Math.PI);\ndouble distanceMM = 500;\nint targetCounts = (int)(distanceMM * countsPerMM);"
    },
    {
      "type": "text",
      "title": "Common Pitfalls and Debugging",
      "content": "If your robot moves the wrong distance or direction, check your encoder constants, motor directions, and reset encoders before each run. <a href=\"https://gm0.org/en/latest/docs/software/tutorials/encoders.html#troubleshooting\" target=\"_blank\">gm0: Troubleshooting Encoders</a>"
    },
    {
      "type": "text",
      "title": "Best Practices for Modular Code",
      "content": "Break your code into reusable functions like driveForward(distance) and turn(angle). This makes your code easier to test and modify. <a href=\"https://gm0.org/en/latest/docs/software/tutorials/encoders.html#modular-code\" target=\"_blank\">gm0: Modular Encoder Code</a>"
    },
    {
      "type": "exercise-box",
      "title": "Encoder-Based Movement Practice",
      "description": "Try these hands-on tasks:",
      "tasks": [
        "Calibrate your robot's encoder constants (counts per mm or inch).",
        "Write a function to drive a set distance using encoders.",
        "Test your code by driving a square path.",
        "Add telemetry to display encoder values during movement.",
        "Debug and fix any issues with direction or distance."
      ]
    },
    {
      "type": "link-grid",
      "title": "Further Reading",
      "links": [
        { "label": "Basic Autonomous Programming", "id": "basic-autonomous-programming" },
        { "label": "Time-Based Movement", "id": "time-based-movement" },
        { "label": "FTC Docs: Using Encoders", "url": "https://ftc-docs.firstinspires.org/en/latest/programming_resources/motors/using-encoders.html" }
      ]
    }
  ]
} 