{
  "title": "Motor Encoders",
  "sections": [
    {
      "type": "text",
      "title": "What is a Motor Encoder?",
      "content": "A motor encoder is a sensor built into some DC motors that measures rotation. Encoders allow you to move your robot precise distances and track movement."
    },
    {
      "type": "code",
      "title": "Reading Encoder Values",
      "content": "Use <code>getCurrentPosition()</code> to read the encoder value. This tells you how far the motor has turned since it was last reset.",
      "code": "int position = leftDrive.getCurrentPosition();\ntelemetry.addData(\"Encoder Position\", position);\ntelemetry.update();"
    },
    {
      "type": "text",
      "title": "Using Encoders for Precise Movement",
      "content": "You can use encoders to move your robot a set distance. This is especially useful in autonomous routines."
    },
    {
      "type": "code",
      "title": "Example: Move Forward a Set Distance",
      "content": "This code moves the robot forward until the encoder reaches a target value. Always reset the encoder before starting.",
      "code": "leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\nleftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n\nint target = 1000; // Target encoder counts\nleftDrive.setPower(0.5);\nwhile (opModeIsActive() && leftDrive.getCurrentPosition() < target) {\n    telemetry.addData(\"Encoder\", leftDrive.getCurrentPosition());\n    telemetry.update();\n}\nleftDrive.setPower(0);"
    },
    {
      "type": "text",
      "title": "Resetting and Configuring Encoders",
      "content": "Always reset encoders at the start of your OpMode to avoid errors from previous runs. Use <code>STOP_AND_RESET_ENCODER</code> and <code>RUN_USING_ENCODER</code> modes."
    },
    {
      "type": "code",
      "title": "Resetting Encoders",
      "content": "",
      "code": "leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\nleftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);"
    },
    {
      "type": "text",
      "title": "Troubleshooting Encoder Issues",
      "content": "If your encoder values don't change:<ul><li>Check that your motor supports encoders.</li><li>Check wiring and configuration.</li><li>Make sure you reset the encoder before use.</li></ul>"
    },
    {
      "type": "exercise-box",
      "title": "Practice: Move a Set Distance",
      "description": "Write code to move a motor forward until the encoder reaches 500 counts, then stop.",
      "tasks": [
        "Reset the encoder.",
        "Set the motor to run using encoder.",
        "Move until the encoder reaches 500.",
        "Stop the motor."
      ],
      "answers": [
        {
          "task": "Reset the encoder",
          "content": "// Reset the encoder to zero\nleftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\n\n// This stops the motor and resets the encoder count to 0\n// Always do this at the start of your OpMode to ensure accurate measurements\n\n// Note: The motor will stop when you reset the encoder\n// You must set the mode back to RUN_USING_ENCODER before setting power"
        },
        {
          "task": "Set the motor to run using encoder",
          "content": "// Set the motor to use encoder mode\nleftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n\n// This tells the motor to use encoder feedback\n// The motor will now track its position accurately\n// You can now read the encoder value with getCurrentPosition()\n\n// Alternative modes you might use:\n// RUN_WITHOUT_ENCODER - ignores encoder (default)\n// RUN_TO_POSITION - automatically moves to a target position"
        },
        {
          "task": "Move until the encoder reaches 500",
          "content": "// Set motor power and move until target reached\nleftDrive.setPower(0.5); // 50% power forward\n\n// Loop until encoder reaches target or OpMode stops\nwhile (opModeIsActive() && leftDrive.getCurrentPosition() < 500) {\n    // Display current encoder value\n    telemetry.addData(\"Current Position\", leftDrive.getCurrentPosition());\n    telemetry.addData(\"Target Position\", 500);\n    telemetry.addData(\"Remaining\", 500 - leftDrive.getCurrentPosition());\n    telemetry.update();\n}\n\n// The loop will exit when either:\n// - The encoder reaches 500 counts\n// - The OpMode is stopped (opModeIsActive() returns false)"
        },
        {
          "task": "Stop the motor",
          "content": "// Stop the motor by setting power to zero\nleftDrive.setPower(0);\n\n// This immediately stops the motor\n// Always stop motors at the end of movement to prevent unexpected motion\n\n// Optional: Display final position\ntelemetry.addData(\"Final Position\", leftDrive.getCurrentPosition());\ntelemetry.addData(\"Movement Complete\", \"Motor stopped\");\ntelemetry.update();"
        },
        {
          "task": "Combine all tasks into one complete encoder movement OpMode",
          "content": "import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\nimport com.qualcomm.robotcore.hardware.DcMotor;\n\n@Autonomous(name = \"EncoderMovement\")\npublic class EncoderMovement extends LinearOpMode {\n    private DcMotor leftDrive;\n\n    @Override\n    public void runOpMode() {\n        // Initialize motor\n        leftDrive = hardwareMap.get(DcMotor.class, \"left_drive\");\n        \n        // Show initialization status\n        telemetry.addData(\"Status\", \"Encoder Movement Ready\");\n        telemetry.addData(\"Instructions\", \"Will move forward 500 encoder counts\");\n        telemetry.update();\n        \n        waitForStart();\n        \n        // Task 1: Reset the encoder\n        telemetry.addData(\"Status\", \"Resetting encoder...\");\n        telemetry.update();\n        leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\n        \n        // Task 2: Set the motor to run using encoder\n        leftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n        \n        // Task 3: Move until the encoder reaches 500\n        telemetry.addData(\"Status\", \"Moving to target...\");\n        telemetry.update();\n        \n        leftDrive.setPower(0.5); // 50% power forward\n        \n        while (opModeIsActive() && leftDrive.getCurrentPosition() < 500) {\n            telemetry.addData(\"Current Position\", leftDrive.getCurrentPosition());\n            telemetry.addData(\"Target Position\", 500);\n            telemetry.addData(\"Remaining\", 500 - leftDrive.getCurrentPosition());\n            telemetry.addData(\"Progress\", \"%.1f%%\", (leftDrive.getCurrentPosition() / 500.0) * 100);\n            telemetry.update();\n        }\n        \n        // Task 4: Stop the motor\n        leftDrive.setPower(0);\n        \n        // Show final results\n        telemetry.addData(\"Status\", \"Movement Complete!\");\n        telemetry.addData(\"Final Position\", leftDrive.getCurrentPosition());\n        telemetry.addData(\"Target Reached\", leftDrive.getCurrentPosition() >= 500 ? \"Yes\" : \"No\");\n        telemetry.update();\n        \n        // Wait a moment to see the final telemetry\n        sleep(2000);\n    }\n}"
        }
      ]
    }
  ]
}
