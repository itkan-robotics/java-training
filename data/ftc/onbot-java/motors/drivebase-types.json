{
  "title": "Drivebase Types in FTC",
  "sections": [
    {
      "type": "text",
      "title": "Introduction to Drivebase Types",
      "content": "The drivebase is the foundation of your robot's movement. The most common FTC drivebases are Tank, Mecanum, and Holonomic (Omni). Each has unique movement capabilities and programming requirements. Choosing the right drivebase is crucial for your robot's strategy and performance."
    },
    {
      "type": "text",
      "title": "Tank Drive",
      "content": "Tank drive uses two sets of wheels (left and right), each powered by one or more motors. It is simple, reliable, and easy to program. The robot moves forward/backward by powering both sides equally, and turns by powering sides in opposite directions. For more, see <a href=\"https://gm0.org/en/latest/docs/robot-design/drivetrains/tank.html\" target=\"_blank\">gm0: Tank Drive</a>."
    },
    {
      "type": "code",
      "title": "Sample Code: Tank Drive Control",
      "content": "Each joystick controls one side of the robot.",
      "code": "while (opModeIsActive()) {\n    double leftPower = -gamepad1.left_stick_y;\n    double rightPower = -gamepad1.right_stick_y;\n    leftDrive.setPower(leftPower);\n    rightDrive.setPower(rightPower);\n    telemetry.addData(\"Left Power\", leftPower);\n    telemetry.addData(\"Right Power\", rightPower);\n    telemetry.update();\n}"
    },
    {
      "type": "text",
      "title": "Mecanum Drive",
      "content": "Mecanum drive uses special wheels that allow the robot to move in any direction (omnidirectional movement), including strafing left/right. It requires four motors and more complex code, but offers high maneuverability. For more, see <a href=\"https://gm0.org/en/latest/docs/software/tutorials/mecanum-drive.html\" target=\"_blank\">gm0: Mecanum Drive</a>."
    },
    {
      "type": "code",
      "title": "Sample Code: Mecanum Drive Control (Basic)",
      "content": "This code lets the robot move forward/backward, strafe, and rotate using both joysticks.",
      "code": "while (opModeIsActive()) {\n    double y = -gamepad1.left_stick_y;    // Forward/backward\n    double x = gamepad1.left_stick_x;     // Strafe left/right\n    double rx = gamepad1.right_stick_x;   // Rotate\n\n    double leftFrontPower  = y + x + rx;\n    double leftBackPower   = y - x + rx;\n    double rightFrontPower = y - x - rx;\n    double rightBackPower  = y + x - rx;\n\n    leftFront.setPower(leftFrontPower);\n    leftBack.setPower(leftBackPower);\n    rightFront.setPower(rightFrontPower);\n    rightBack.setPower(rightBackPower);\n\n    telemetry.addData(\"LF\", leftFrontPower);\n    telemetry.addData(\"LB\", leftBackPower);\n    telemetry.addData(\"RF\", rightFrontPower);\n    telemetry.addData(\"RB\", rightBackPower);\n    telemetry.update();\n}"
    },
    {
      "type": "text",
      "title": "Holonomic (Omni) Drive",
      "content": "Holonomic drivebases use omni wheels arranged in a triangle or X pattern. Like mecanum, they allow omnidirectional movement, but are less common in FTC. Programming is similar to mecanum, but the math for wheel power is different. For more, see <a href=\"https://gm0.org/en/latest/docs/robot-design/drivetrains/holonomic.html#x-drive\" target=\"_blank\">gm0: Holonomic Drive</a>."
    },
    {
      "type": "code",
      "title": "Sample Code: 4-Wheel X-Drive (Holonomic)",
      "content": "This code is for a 4-wheel X-drive with omni wheels arranged in an X pattern. Each wheel is 45° from the forward direction.",
      "code": "while (opModeIsActive()) {\n    double y = -gamepad1.left_stick_y;\n    double x = gamepad1.left_stick_x;\n    double rotation = gamepad1.right_stick_x;\n\n    // X-drive calculations (45° wheel arrangement)\n    // Front-left wheel\n    double frontLeft = y + x + rotation;\n    // Front-right wheel\n    double frontRight = y - x - rotation;\n    // Back-left wheel\n    double backLeft = y - x + rotation;\n    // Back-right wheel\n    double backRight = y + x - rotation;\n\n    // Set motor powers\n    frontLeftMotor.setPower(frontLeft);\n    frontRightMotor.setPower(frontRight);\n    backLeftMotor.setPower(backLeft);\n    backRightMotor.setPower(backRight);\n\n    // Display telemetry\n    telemetry.addData(\"Front Left\", \"%.2f\", frontLeft);\n    telemetry.addData(\"Front Right\", \"%.2f\", frontRight);\n    telemetry.addData(\"Back Left\", \"%.2f\", backLeft);\n    telemetry.addData(\"Back Right\", \"%.2f\", backRight);\n    telemetry.update();\n}"
    },
    {
      "type": "list",
      "title": "Drivebase Comparison Table",
      "content": [
        "Tank Drive: Simple, robust, easy to program, but cannot strafe.",
        "Mecanum Drive: Omnidirectional, can strafe, more complex code and hardware.",
        "Holonomic/Omni Drive: Omnidirectional, unique wheel arrangement, less common in FTC."
      ]
    },
    {
      "type": "exercise-box",
      "title": "Practice: Choose and Program a Drivebase",
      "description": "Pick a drivebase type for your robot. Write a short code snippet to control it using gamepad input. Explain why you chose this drivebase for your robot's needs.",
      "tasks": [
        "Create an OpMode that allows the user to toggle between Tank Drive and Mecanum Drive using the gamepad.",
        "Use the gamepad to control the motors of the drivebase independently.",
        "Use telemetry to display the motor powers."
      ],
      "answers": [
        {
          "task": "Create an OpMode that allows the user to toggle between Tank Drive and Mecanum Drive using the gamepad",
          "content": "// Add a boolean variable to track drive mode\nboolean isTankDrive = true; // Start with tank drive\n\n// In your main loop, check for toggle button (e.g., 'X' button)\nwhile (opModeIsActive()) {\n    // Toggle drive mode when X is pressed\n    if (gamepad1.x && !gamepad1.x_was_pressed) {\n        isTankDrive = !isTankDrive;\n        telemetry.addData(\"Drive Mode\", isTankDrive ? \"Tank\" : \"Mecanum\");\n        telemetry.update();\n        sleep(500); // Prevent rapid toggling\n    }\n    \n    // Store previous button state\n    gamepad1.x_was_pressed = gamepad1.x;\n    \n    // Continue with drive control logic...\n}"
        },
        {
          "task": "Use the gamepad to control the motors of the drivebase independently",
          "content": "// Tank Drive Control\nif (isTankDrive) {\n    double leftPower = -gamepad1.left_stick_y;\n    double rightPower = -gamepad1.right_stick_y;\n    \n    leftDrive.setPower(leftPower);\n    rightDrive.setPower(rightPower);\n}\n// Mecanum Drive Control\nelse {\n    double y = -gamepad1.left_stick_y;    // Forward/backward\n    double x = gamepad1.left_stick_x;     // Strafe left/right\n    double rx = gamepad1.right_stick_x;   // Rotate\n\n    double leftFrontPower  = y + x + rx;\n    double leftBackPower   = y - x + rx;\n    double rightFrontPower = y - x - rx;\n    double rightBackPower  = y + x - rx;\n\n    leftFront.setPower(leftFrontPower);\n    leftBack.setPower(leftBackPower);\n    rightFront.setPower(rightFrontPower);\n    rightBack.setPower(rightBackPower);\n}"
        },
        {
          "task": "Use telemetry to display the motor powers",
          "content": "// Display telemetry based on current drive mode\nif (isTankDrive) {\n    telemetry.addData(\"Drive Mode\", \"Tank Drive\");\n    telemetry.addData(\"Left Power\", \"%.2f\", leftDrive.getPower());\n    telemetry.addData(\"Right Power\", \"%.2f\", rightDrive.getPower());\n} else {\n    telemetry.addData(\"Drive Mode\", \"Mecanum Drive\");\n    telemetry.addData(\"Left Front\", \"%.2f\", leftFront.getPower());\n    telemetry.addData(\"Left Back\", \"%.2f\", leftBack.getPower());\n    telemetry.addData(\"Right Front\", \"%.2f\", rightFront.getPower());\n    telemetry.addData(\"Right Back\", \"%.2f\", rightBack.getPower());\n}\n\ntelemetry.addData(\"Toggle Drive\", \"Press X to switch\");\ntelemetry.update();"
        },
        {
          "task": "Combine all tasks into one complete OpMode",
          "content": "import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\nimport com.qualcomm.robotcore.hardware.DcMotor;\n\n@TeleOp(name = \"ToggleDrive\")\npublic class ToggleDrive extends LinearOpMode {\n    // Tank drive motors\n    private DcMotor leftDrive, rightDrive;\n    \n    // Mecanum drive motors\n    private DcMotor leftFront, leftBack, rightFront, rightBack;\n    \n    // Drive mode toggle\n    private boolean isTankDrive = true;\n    private boolean xWasPressed = false;\n\n    @Override\n    public void runOpMode() {\n        // Initialize tank drive motors\n        leftDrive = hardwareMap.get(DcMotor.class, \"left_drive\");\n        rightDrive = hardwareMap.get(DcMotor.class, \"right_drive\");\n        \n        // Initialize mecanum drive motors\n        leftFront = hardwareMap.get(DcMotor.class, \"left_front\");\n        leftBack = hardwareMap.get(DcMotor.class, \"left_back\");\n        rightFront = hardwareMap.get(DcMotor.class, \"right_front\");\n        rightBack = hardwareMap.get(DcMotor.class, \"right_back\");\n        \n        // Show initialization status\n        telemetry.addData(\"Status\", \"Toggle Drive Ready\");\n        telemetry.addData(\"Initial Mode\", \"Tank Drive\");\n        telemetry.addData(\"Instructions\", \"Press X to toggle drive modes\");\n        telemetry.update();\n        \n        waitForStart();\n        \n        while (opModeIsActive()) {\n            // Toggle drive mode when X is pressed\n            if (gamepad1.x && !xWasPressed) {\n                isTankDrive = !isTankDrive;\n                telemetry.addData(\"Drive Mode Changed\", isTankDrive ? \"Tank\" : \"Mecanum\");\n                telemetry.update();\n                sleep(500); // Prevent rapid toggling\n            }\n            xWasPressed = gamepad1.x;\n            \n            // Tank Drive Control\n            if (isTankDrive) {\n                double leftPower = -gamepad1.left_stick_y;\n                double rightPower = -gamepad1.right_stick_y;\n                \n                leftDrive.setPower(leftPower);\n                rightDrive.setPower(rightPower);\n                \n                // Display tank drive telemetry\n                telemetry.addData(\"Drive Mode\", \"Tank Drive\");\n                telemetry.addData(\"Left Power\", \"%.2f\", leftPower);\n                telemetry.addData(\"Right Power\", \"%.2f\", rightPower);\n            }\n            // Mecanum Drive Control\n            else {\n                double y = -gamepad1.left_stick_y;    // Forward/backward\n                double x = gamepad1.left_stick_x;     // Strafe left/right\n                double rx = gamepad1.right_stick_x;   // Rotate\n\n                double leftFrontPower  = y + x + rx;\n                double leftBackPower   = y - x + rx;\n                double rightFrontPower = y - x - rx;\n                double rightBackPower  = y + x - rx;\n\n                leftFront.setPower(leftFrontPower);\n                leftBack.setPower(leftBackPower);\n                rightFront.setPower(rightFrontPower);\n                rightBack.setPower(rightBackPower);\n                \n                // Display mecanum drive telemetry\n                telemetry.addData(\"Drive Mode\", \"Mecanum Drive\");\n                telemetry.addData(\"Left Front\", \"%.2f\", leftFrontPower);\n                telemetry.addData(\"Left Back\", \"%.2f\", leftBackPower);\n                telemetry.addData(\"Right Front\", \"%.2f\", rightFrontPower);\n                telemetry.addData(\"Right Back\", \"%.2f\", rightBackPower);\n            }\n            \n            telemetry.addData(\"Toggle Drive\", \"Press X to switch\");\n            telemetry.update();\n        }\n        \n        // Stop all motors\n        leftDrive.setPower(0);\n        rightDrive.setPower(0);\n        leftFront.setPower(0);\n        leftBack.setPower(0);\n        rightFront.setPower(0);\n        rightBack.setPower(0);\n    }\n}"
        }
      ]
    },
    {
      "type": "link-grid",
      "title": "Further Reading",
      "content": [
        {"label": "gm0: Tank Drive", "url": "https://gm0.org/en/latest/docs/robot-design/drivetrains/tank.html"},
        {"label": "gm0: Mecanum Drive", "url": "https://gm0.org/en/latest/docs/software/tutorials/mecanum-drive.html"},
        {"label": "gm0: Holonomic Drive", "url": "https://gm0.org/en/latest/docs/robot-design/drivetrains/holonomic.html"}      ]
    }
  ]
}
