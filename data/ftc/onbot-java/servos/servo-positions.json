{
  "title": "Understanding and Using Servo Positions",
  "sections": [
    {
      "type": "text",
      "title": "Servo Position Range and Units",
      "content": "Servo positions in FTC are set using values from 0.0 to 1.0. 0.0 usually means one end of the servo's range (e.g., 0 degrees), and 1.0 means the other end (e.g., 180 degrees). The actual angle may vary by servo model."
    },
    {
      "type": "code",
      "title": "Setting and Reading Servo Position",
      "content": "This code shows how to set a servo to a specific position and read its current position.",
      "code": "myServo.setPosition(0.25); // Move to 25% of range\ndouble pos = myServo.getPosition(); // Read current position\ntelemetry.addData(\"Servo Position\", pos);\ntelemetry.update();"
    },
    {
      "type": "text",
      "title": "Calibrating Servo Positions for Mechanisms",
      "content": "To ensure your mechanism moves correctly, you may need to calibrate the servo's range. Use small increments and telemetry to find the correct values for your application."
    },
    {
      "type": "code",
      "title": "Incremental Calibration Example",
      "content": "This code lets you adjust the servo position in small steps using gamepad buttons, and see the result in telemetry.",
      "code": "double position = 0.5;\nwhile (opModeIsActive()) {\n    if (gamepad1.dpad_up) {\n        position += 0.01;\n    } else if (gamepad1.dpad_down) {\n        position -= 0.01;\n    }\n    position = Math.max(0.0, Math.min(1.0, position));\n    myServo.setPosition(position);\n    telemetry.addData(\"Servo Position\", position);\n    telemetry.update();\n}"
    },
    {
      "type": "text",
      "title": "Best Practices for Setting and Changing Positions",
      "content": "Always use safe ranges for your specific servo and mechanism. Avoid commanding the servo to positions that could cause mechanical binding or damage. Use named constants for important positions in your code."
    },
    {
      "type": "text",
      "title": "Debugging and Telemetry for Servos",
      "content": "Use telemetry to monitor servo positions in real time. This helps you verify that your code is working as expected and makes troubleshooting easier."
    },
    {
      "type": "list",
      "title": "Further Reading and References",
      "items": [
        "<a href=\"https://ftc-docs.firstinspires.org/en/latest/programming_resources/tutorial_specific/onbot_java/controlling_a_servo/Controlling-a-Servo-%28OnBot-Java%29.html\" target=\"_blank\">FTC Docs: Controlling a Servo (OnBot Java)</a>",
        "<a href=\"https://gm0.org/en/latest/docs/power-and-electronics/servo-guide/usage-tips.html\" target=\"_blank\">gm0: Servo Usage Tips</a>"
      ]
    }
  ]
}
