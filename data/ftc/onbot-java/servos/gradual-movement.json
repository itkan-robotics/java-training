{
  "title": "Advanced Servo Control: Gradual Movement (Servo Ramping)",
  "sections": [
    {
      "type": "text",
      "title": "Why Gradual Movement?",
      "content": "Moving a servo instantly between positions can cause jerky motion or damage mechanisms. Gradual movement (servo ramping) is smoother and safer for your robot."
    },
    {
      "type": "text",
      "title": "Implementing Gradual Movement in Code",
      "content": "You can move a servo gradually by incrementally changing its position in small steps over time. This is useful for arms, claws, or any mechanism that needs smooth motion."
    },
    {
      "type": "code",
      "title": "Gradual Movement Example",
      "content": "This code moves a servo from its current position to a target position in small increments, updating every 20ms.",
      "code": "double currentPos = myServo.getPosition();\ndouble targetPos = 1.0; // Target position\ndouble step = 0.01;\n\nwhile (Math.abs(currentPos - targetPos) > 0.01 && opModeIsActive()) {\n    if (currentPos < targetPos) {\n        currentPos += step;\n    } else {\n        currentPos -= step;\n    }\n    currentPos = Math.max(0.0, Math.min(1.0, currentPos));\n    myServo.setPosition(currentPos);\n    telemetry.addData(\"Servo Position\", currentPos);\n    telemetry.update();\n    sleep(20); // Wait 20ms between steps\n}"
    },
    {
      "type": "text",
      "title": "Synchronizing Gradual Movement for Multiple Servos",
      "content": "To move multiple servos smoothly together, update each servo's position in the same loop. Use variables for each servo and adjust them incrementally."
    },
    {
      "type": "text",
      "title": "Using Timers and Delays Responsibly",
      "content": "Avoid long blocking delays in your code. Use short sleeps (10-20ms) for smooth movement, and always check opModeIsActive() in your loops."
    },
    {
      "type": "text",
      "title": "Troubleshooting Gradual Movement",
      "content": "If your servo is not moving smoothly, check your step size and delay. Use telemetry to monitor position and ensure your loop is running as expected."
    },
    {
      "type": "list",
      "title": "Further Reading and References",
      "items": [
        "<a href=\"https://ftc-docs.firstinspires.org/en/latest/programming_resources/tutorial_specific/onbot_java/controlling_a_servo/Controlling-a-Servo-%28OnBot-Java%29.html\" target=\"_blank\">FTC Docs: Controlling a Servo (OnBot Java)</a>",
        "<a href=\"https://gm0.org/en/latest/docs/power-and-electronics/servo-guide/usage-tips.html\" target=\"_blank\">gm0: Servo Usage Tips</a>"
      ]
    }
  ]
}
