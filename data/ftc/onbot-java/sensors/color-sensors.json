{
  "title": "Color Sensors",
  "sections": [
    {
      "type": "text",
      "title": "What is a Color Sensor?",
      "content": "<p>Color sensors detect the color and intensity of light. They are used in FTC robots for tasks such as identifying game elements, line following, and detecting field markings.</p><p>For more, see <a href='https://gm0.org/en/latest/docs/software/sensors/color.html' target='_blank'>gm0: Color Sensors</a> and <a href='https://docs.revrobotics.com/duo-control/programming/sensors#color-sensor' target='_blank'>REV Robotics: Color Sensor</a>.</p>"
    },
    {
      "type": "rules-box",
      "title": "Color Sensor Basics",
      "subtitle": "Key characteristics:",
      "items": [
        "Detects red, green, and blue light intensity",
        "Can measure ambient and reflected light",
        "Used for color detection and line following",
        "Requires calibration for accurate readings",
        "Data accessed through hardwareMap in code"
      ]
    },
    {
      "type": "text",
      "title": "How Color Sensors Work",
      "content": "<p>Color sensors use photodiodes to measure the intensity of different wavelengths of light. The sensor reports red, green, and blue values. See <a href='https://ftc-docs.firstinspires.org/en/latest/programming_resources/ftc_sdk/sensors.html#color-sensor' target='_blank'>FTC Docs: Color Sensor</a>.</p>"
    },
    {
      "type": "code",
      "title": "Color Sensor Example",
      "language": "java",
      "content": "// Initialize and read a color sensor\nColorSensor colorSensor = hardwareMap.get(ColorSensor.class, \"color_sensor\");\nint red = colorSensor.red();\nint green = colorSensor.green();\nint blue = colorSensor.blue();\ntelemetry.addData(\"Red\", red);\ntelemetry.addData(\"Green\", green);\ntelemetry.addData(\"Blue\", blue);\ntelemetry.update();"
    },
    {
      "type": "text",
      "title": "Applications of Color Sensors",
      "content": "<p>Color sensors are used for a variety of applications in FTC robots, including detecting game elements, line following, and field navigation. See <a href='https://gm0.org/en/latest/docs/software/sensors/color.html' target='_blank'>gm0: Color Sensors</a>.</p>"
    },
    {
      "type": "list",
      "title": "Common Use Cases",
      "items": [
        "Detecting colored game elements",
        "Line following on the field",
        "Identifying field markings",
        "Sorting objects by color",
        "Detecting alliance color for autonomous routines"
      ]
    },
    {
      "type": "text",
      "title": "Color Sensor Safety and Best Practices",
      "content": "<p>Proper use of color sensors ensures reliable operation and accurate data. Always test and calibrate sensors before use. See <a href='https://docs.revrobotics.com/duo-control/programming/sensors#sensor-safety' target='_blank'>REV Robotics: Sensor Safety</a>.</p>"
    },
    {
      "type": "rules-box",
      "title": "Safety Guidelines",
      "subtitle": "Follow these practices for safe color sensor use:",
      "items": [
        "Secure sensors to prevent movement during operation",
        "Avoid exposing sensors to excessive light or debris",
        "Calibrate sensors for accurate readings",
        "Monitor sensor data for unexpected values",
        "Document sensor configuration and calibration"
      ]
    },
    {
      "type": "code",
      "title": "Color Sensor Safety Example",
      "language": "java",
      "content": "// Safety check using a color sensor\nint red = colorSensor.red();\nint blue = colorSensor.blue();\nif (red > blue) {\n    // Detected red object\n    telemetry.addData(\"Detected\", \"Red\");\n} else {\n    // Detected blue object\n    telemetry.addData(\"Detected\", \"Blue\");\n}\ntelemetry.update();"
    },
    {
      "type": "text",
      "title": "Troubleshooting Color Sensors",
      "content": "<p>Common color sensor issues and their solutions help teams quickly resolve problems. See <a href='https://gm0.org/en/latest/docs/software/sensors/color.html#troubleshooting' target='_blank'>gm0: Color Sensor Troubleshooting</a>.</p>"
    },
    {
      "type": "list",
      "title": "Common Issues and Solutions",
      "items": [
        "<b>Sensor not detected:</b> Check wiring and configuration",
        "<b>Incorrect readings:</b> Calibrate or check for interference",
        "<b>No response:</b> Test with known colors and check code",
        "<b>Intermittent data:</b> Secure connections and avoid loose wires",
        "<b>Unexpected values:</b> Monitor for out-of-range or error codes"
      ]
    },
    {
      "type": "exercise-box",
      "title": "Color Sensor Practice",
      "description": "Practice these exercises to master color sensor use:",
      "tasks": [
        "Create an OpMode that displays color sensor data",
        "Test sensor response to different colors and lighting",
        "Calibrate sensors and document the process",
        "Implement safety checks using color sensors",
        "Practice troubleshooting common color sensor issues",
        "Test sensor integration with autonomous code",
        "Document sensor configuration and calibration"
      ],
      "content": "// Practice Exercise: Color Sensor\n// Create an OpMode that displays color sensor data\n// Include calibration and troubleshooting steps\n// Test sensor response to different conditions\n\n@TeleOp(name=\"Color Sensor Test\", group=\"Testing\")\npublic class ColorSensorTestOpMode extends LinearOpMode {\n    private ColorSensor colorSensor;\n    @Override\n    public void runOpMode() {\n        colorSensor = hardwareMap.get(ColorSensor.class, \"color_sensor\");\n        waitForStart();\n        while (opModeIsActive()) {\n            telemetry.addData(\"Red\", colorSensor.red());\n            telemetry.addData(\"Green\", colorSensor.green());\n            telemetry.addData(\"Blue\", colorSensor.blue());\n            telemetry.update();\n        }\n    }"
    }
  ]
} 
