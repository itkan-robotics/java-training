{
  "title": "Distance Sensors in FTC",
  "sections": [
    {
      "type": "text",
      "title": "What is a Distance Sensor?",
      "content": "A distance sensor measures how far away an object is from the sensor. In FTC, distance sensors are used for tasks like obstacle avoidance, alignment, and detecting game elements."
    },
    {
      "type": "text",
      "title": "Configuring and Mapping a Distance Sensor",
      "content": "Add the distance sensor to your robot's hardware configuration and assign it a clear name. Then, map it in your code as shown below."
    },
    {
      "type": "code",
      "title": "Mapping a Distance Sensor in Java",
      "content": "Here's how to map a distance sensor in your Op Mode:",
      "code": "private DistanceSensor sensorColorRange;\n\n@Override\npublic void runOpMode() {\n    sensorColorRange = hardwareMap.get(DistanceSensor.class, \"sensorColorRange\");\n    // Now you can use sensorColorRange in your code\n}"
    },
    {
      "type": "code",
      "title": "Reading Distance Values and Handling Units",
      "content": "You can read the distance in centimeters and handle out-of-range values as follows:",
      "code": "double distance = sensorColorRange.getDistance(DistanceUnit.CM);\nif (Double.isNaN(distance)) {\n    telemetry.addData(\"Distance\", \"Out of range\");\n} else {\n    telemetry.addData(\"Distance (cm)\", distance);\n}\ntelemetry.update();"
    },
    {
      "type": "text",
      "title": "Using Distance Data in Robot Logic",
      "content": "Distance sensors can be used for obstacle avoidance, alignment, and more. For example, you can stop your robot if an object is detected within a certain range."
    },
    {
      "type": "code",
      "title": "Example: Obstacle Avoidance Logic",
      "content": "This snippet shows how to use a distance sensor to stop the robot if an object is too close:",
      "code": "if (sensorColorRange.getDistance(DistanceUnit.CM) < 10) {\n    // Stop motors\n    leftMotor.setPower(0);\n    rightMotor.setPower(0);\n    telemetry.addData(\"Status\", \"Obstacle detected!\");\n}\ntelemetry.update();"
    },
    {
      "type": "emphasis-box",
      "title": "Troubleshooting and Best Practices",
      "content": "If your sensor returns 'NaN', the target may be out of range. Make sure your sensor is properly connected and configured."
    },
    {
      "type": "link-grid",
      "title": "Related Topics",
      "content": [
        {"label": "Intro to Sensors", "url": "#intro-to-sensors"},
        {"label": "Color Sensors", "url": "#color-sensors"}
      ]
    },
    {
      "type": "link-grid",
      "title": "See Also",
      "content": [
        {"label": "FTC OpMode API: DistanceSensor", "url": "https://javadoc.io/doc/org.firstinspires.ftc/RobotCore/latest/com/qualcomm/robotcore/hardware/DistanceSensor.html"}
      ]
    }
  ]
}
