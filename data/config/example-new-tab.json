{
  "id": "arrays",
  "title": "Java Arrays",
  "sections": [
    {
      "type": "text",
      "title": "What are Arrays?",
      "content": "Arrays in Java are containers that hold multiple values of the same type. Think of them as a row of boxes, each containing a value, and each box has a number (index) to identify it."
    },
    {
      "type": "list",
      "title": "Key Concepts:",
      "items": [
        "<strong>Fixed Size:</strong> Arrays have a predetermined size that cannot change",
        "<strong>Same Type:</strong> All elements must be of the same data type",
        "<strong>Index-based:</strong> Elements are accessed using numeric indices (0, 1, 2...)",
        "<strong>Zero-indexed:</strong> The first element is at index 0"
      ]
    },
    {
      "type": "code",
      "title": "Array Declaration and Initialization:",
      "content": "// Declaration and initialization\nint[] robotScores = new int[5];\nString[] teamNames = {\"Alpha\", \"Beta\", \"Gamma\"};\ndouble[] sensorReadings = new double[10];\n\n// Accessing elements\nrobotScores[0] = 95;  // Set first element\nrobotScores[1] = 87;  // Set second element\n\n// Getting array length\nint numberOfTeams = teamNames.length;\nSystem.out.println(\"Number of teams: \" + numberOfTeams);"
    },
    {
      "type": "rules-box",
      "title": "Array Best Practices:",
      "goodPractices": [
        "Use descriptive names: <code>studentGrades</code> instead of <code>arr</code>",
        "Check array bounds before accessing elements",
        "Use <code>array.length</code> in loops to avoid hardcoding",
        "Initialize arrays with meaningful default values"
      ],
      "avoid": [
        "Accessing elements beyond array length",
        "Forgetting that arrays are zero-indexed",
        "Using magic numbers instead of <code>.length</code>",
        "Modifying array size after creation (impossible anyway!)"
      ]
    },
    {
      "type": "code",
      "title": "Array Iteration Examples:",
      "content": "int[] motorPowers = {75, 50, 100, 25, 90};\n\n// Traditional for loop\nfor (int i = 0; i < motorPowers.length; i++) {\n    System.out.println(\"Motor \" + i + \" power: \" + motorPowers[i]);\n}\n\n// Enhanced for loop (for-each)\nfor (int power : motorPowers) {\n    System.out.println(\"Power level: \" + power);\n}\n\n// Finding maximum value\nint maxPower = motorPowers[0];\nfor (int power : motorPowers) {\n    if (power > maxPower) {\n        maxPower = power;\n    }\n}\nSystem.out.println(\"Maximum power: \" + maxPower);"
    },
    {
      "type": "exercise-box",
      "title": "Try It Yourself:",
      "subtitle": "Exercise 1: Array Practice",
      "content": "Create and work with arrays for robot data:",
      "tasks": [
        "Create an array to store 5 robot battery levels",
        "Fill the array with different percentage values",
        "Write a loop to find the average battery level",
        "Create a method that finds robots with low battery (< 20%)"
      ],
      "answers": [
        {
          "task": "Create an array to store 5 robot battery levels",
          "code": "// Method 1: Declare and initialize separately\ndouble[] batteryLevels = new double[5];\n\n// Method 2: Declare and initialize with values\ndouble[] batteryLevels = {85.5, 67.2, 92.1, 15.8, 78.9};\n\n// Method 3: Declare, then assign values\ndouble[] batteryLevels = new double[5];\nbatteryLevels[0] = 85.5;\nbatteryLevels[1] = 67.2;\nbatteryLevels[2] = 92.1;\nbatteryLevels[3] = 15.8;\nbatteryLevels[4] = 78.9;"
        },
        {
          "task": "Fill the array with different percentage values",
          "code": "public class BatteryManager {\n    public static void main(String[] args) {\n        double[] batteryLevels = new double[5];\n        String[] robotNames = {\"Alpha\", \"Beta\", \"Gamma\", \"Delta\", \"Echo\"};\n        \n        // Fill array with different values\n        batteryLevels[0] = 85.5;  // Alpha robot\n        batteryLevels[1] = 67.2;  // Beta robot\n        batteryLevels[2] = 92.1;  // Gamma robot\n        batteryLevels[3] = 15.8;  // Delta robot (low!)\n        batteryLevels[4] = 78.9;  // Echo robot\n        \n        // Display all battery levels\n        System.out.println(\"=== Robot Battery Status ===\");\n        for (int i = 0; i < batteryLevels.length; i++) {\n            System.out.println(robotNames[i] + \": \" + batteryLevels[i] + \"%\");\n        }\n    }\n}"
        },
        {
          "task": "Write a loop to find the average battery level",
          "code": "public static double calculateAverageBattery(double[] batteryLevels) {\n    double sum = 0;\n    \n    // Add up all battery levels\n    for (int i = 0; i < batteryLevels.length; i++) {\n        sum += batteryLevels[i];\n    }\n    \n    // Calculate average\n    double average = sum / batteryLevels.length;\n    \n    System.out.println(\"Total battery: \" + sum + \"%\");\n    System.out.println(\"Average battery: \" + average + \"%\");\n    \n    return average;\n}\n\n// Alternative using enhanced for loop\npublic static double calculateAverageBatteryEnhanced(double[] batteryLevels) {\n    double sum = 0;\n    \n    for (double level : batteryLevels) {\n        sum += level;\n    }\n    \n    return sum / batteryLevels.length;\n}"
        },
        {
          "task": "Create a method that finds robots with low battery (< 20%)",
          "code": "public static void findLowBatteryRobots(String[] robotNames, double[] batteryLevels) {\n    System.out.println(\"\\n⚠️ LOW BATTERY ALERT ⚠️\");\n    boolean foundLowBattery = false;\n    \n    for (int i = 0; i < batteryLevels.length; i++) {\n        if (batteryLevels[i] < 20.0) {\n            System.out.println(\"🔋 \" + robotNames[i] + \": \" + batteryLevels[i] + \"% - NEEDS CHARGING!\");\n            foundLowBattery = true;\n        }\n    }\n    \n    if (!foundLowBattery) {\n        System.out.println(\"✅ All robots have sufficient battery levels\");\n    }\n}\n\n// Enhanced version that returns array of low battery robots\npublic static String[] getLowBatteryRobotNames(String[] robotNames, double[] batteryLevels) {\n    // First, count how many robots have low battery\n    int lowBatteryCount = 0;\n    for (double level : batteryLevels) {\n        if (level < 20.0) {\n            lowBatteryCount++;\n        }\n    }\n    \n    // Create array for low battery robot names\n    String[] lowBatteryRobots = new String[lowBatteryCount];\n    int index = 0;\n    \n    for (int i = 0; i < batteryLevels.length; i++) {\n        if (batteryLevels[i] < 20.0) {\n            lowBatteryRobots[index] = robotNames[i];\n            index++;\n        }\n    }\n    \n    return lowBatteryRobots;\n}"
        }
      ]
    }
  ]
} 