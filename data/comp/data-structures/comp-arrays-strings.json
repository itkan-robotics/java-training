{
  "id": "comp-arrays-strings",
  "title": "Arrays & Strings",
  "sections": [
    {
      "type": "text",
      "title": "Arrays in Competitive Coding",
      "content": "Arrays are the most fundamental data structure. Understanding array manipulation is crucial for solving many problems efficiently."
    },
    {
      "type": "code",
      "title": "Common Array Operations",
      "content": "// Traversal\nfor (int i = 0; i < arr.length; i++) {\n    // Process arr[i]\n}\n\n// Enhanced for loop\nfor (int num : arr) {\n    // Process num\n}\n\n// Two pointers technique\nint left = 0, right = arr.length - 1;\nwhile (left < right) {\n    // Process arr[left] and arr[right]\n    left++;\n    right--;\n}\n\n// Sliding window\nint windowSum = 0;\nfor (int i = 0; i < k; i++) {\n    windowSum += arr[i];\n}\nfor (int i = k; i < arr.length; i++) {\n    windowSum = windowSum - arr[i-k] + arr[i];\n    // Process windowSum\n}"
    },
    {
      "type": "text",
      "title": "String Manipulation",
      "content": "Strings are essentially character arrays. Common operations include:<br><br><strong>Length:</strong> str.length()<br><strong>Character access:</strong> str.charAt(i)<br><strong>Substring:</strong> str.substring(start, end)<br><strong>Character array:</strong> str.toCharArray()<br><strong>String building:</strong> StringBuilder"
    },
    {
      "type": "code",
      "title": "String Examples",
      "content": "// Palindrome check\nboolean isPalindrome(String s) {\n    int left = 0, right = s.length() - 1;\n    while (left < right) {\n        if (s.charAt(left) != s.charAt(right)) {\n            return false;\n        }\n        left++;\n        right--;\n    }\n    return true;\n}\n\n// String reversal\nString reverse(String s) {\n    StringBuilder sb = new StringBuilder(s);\n    return sb.reverse().toString();\n}\n\n// Character frequency\nint[] getFrequency(String s) {\n    int[] freq = new int[26];\n    for (char c : s.toCharArray()) {\n        freq[c - 'a']++;\n    }\n    return freq;\n}"
    },
    {
      "type": "text",
      "title": "Key Techniques",
      "content": "<ul><li><strong>Two Pointers:</strong> For palindrome, two sum, container problems</li><li><strong>Sliding Window:</strong> For substring, subarray problems</li><li><strong>Prefix Sum:</strong> For range sum queries</li><li><strong>Kadane's Algorithm:</strong> For maximum subarray sum</li><li><strong>Dutch National Flag:</strong> For array partitioning</li></ul>"
    }
  ]
} 
