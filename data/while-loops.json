{
  "id": "while-loops",
  "title": "While Loops",
  "sections": [
    {
      "type": "text",
      "title": "Why Use Loops?",
      "content": "Loops allow programs to repeat code efficiently. Instead of writing the same code multiple times, loops execute a block of code repeatedly based on a condition."
    },
    {
      "type": "code",
      "title": "Problem: Repetitive Code",
      "content": "// Without loops - inefficient and inflexible\nScanner scanner = new Scanner(System.in);\nint sum = 0;\n\nSystem.out.println(\"Input a number: \");\nsum = sum + Integer.valueOf(scanner.nextLine());\n\nSystem.out.println(\"Input a number: \");\nsum = sum + Integer.valueOf(scanner.nextLine());\n\nSystem.out.println(\"Input a number: \");\nsum = sum + Integer.valueOf(scanner.nextLine());\n\n// What if we need 100 numbers? 1000 numbers?\nSystem.out.println(\"The sum is \" + sum);"
    },
    {
      "type": "code",
      "title": "Solution: Using While Loops",
      "content": "// With loops - efficient and flexible\nScanner scanner = new Scanner(System.in);\nint numbersRead = 0;\nint sum = 0;\n\nwhile (true) {\n    if (numbersRead == 5) {\n        break;  // Exit when we've read 5 numbers\n    }\n    \n    System.out.println(\"Input number\");\n    sum = sum + Integer.valueOf(scanner.nextLine());\n    numbersRead = numbersRead + 1;\n}\n\nSystem.out.println(\"The sum of the numbers is \" + sum);"
    },
    {
      "type": "text",
      "title": "Basic While Loop Structure:",
      "content": "while (condition) {\n    // Code to repeat\n    // This block executes while condition is true\n}\n\n// Simple counting example\nint count = 1;\nwhile (count <= 5) {\n    System.out.println(\"Count: \" + count);\n    count = count + 1;  // Important: update the condition!\n}"
    },
    {
      "type": "code",
      "title": "While Loop Syntax:",
      "content": "while (condition) {\n    // Code to repeat\n    // This block executes while condition is true\n}\n\n// Simple counting example\nint count = 1;\nwhile (count <= 5) {\n    System.out.println(\"Count: \" + count);\n    count = count + 1;  // Important: update the condition!\n}"
    },
    {
      "type": "text",
      "title": "Infinite Loops",
      "content": "Using <code>while (true)</code> creates an infinite loop that runs forever unless explicitly stopped with a <code>break</code> statement. This is useful for user input scenarios."
    },
    {
      "type": "code",
      "title": "Infinite Loop Examples:",
      "content": "// This runs forever (until break is encountered)\nwhile (true) {\n    System.out.println(\"I can program!\");\n}\n\n// Practical infinite loop with break condition\nint robotSpeed = 0;\nwhile (true) {\n    robotSpeed += 10;\n    System.out.println(\"Robot speed: \" + robotSpeed);\n    \n    if (robotSpeed >= 100) {\n        System.out.println(\"Maximum speed reached!\");\n        break;  // Exit the loop\n    }\n}"
    },
    {
      "type": "code",
      "title": "User Input with While Loops:",
      "content": "Scanner scanner = new Scanner(System.in);\n\n// Keep asking until user wants to exit\nwhile (true) {\n    System.out.println(\"Exit? (y exits)\");\n    String input = scanner.nextLine();\n    \n    if (input.equals(\"y\")) {\n        break;  // Exit if user enters 'y'\n    }\n    \n    System.out.println(\"Ok! Let's carry on!\");\n}\n\nSystem.out.println(\"Ready!\");\n\n// Robot example: Read sensor values until threshold\nwhile (true) {\n    System.out.println(\"Input sensor reading (0 to quit)\");\n    int reading = Integer.valueOf(scanner.nextLine());\n    \n    if (reading == 0) {\n        break;\n    }\n    \n    System.out.println(\"Sensor value: \" + reading);\n}"
    },
    {
      "type": "text",
      "title": "While Loops with Conditions",
      "content": "Instead of using <code>while (true)</code> with <code>break</code>, you can put the condition directly in the while statement. This is more elegant when you know the exact condition to check."
    },
    {
      "type": "code",
      "title": "Conditional While Loop:",
      "content": "// Count from 1 to 5 using condition\nint number = 1;\n\nwhile (number < 6) {\n    System.out.println(number);\n    number++;  // Shorthand for number = number + 1\n}\n\n// Robot example: Drive until target reached\ndouble distanceToTarget = 100.0;\ndouble speed = 10.0;\n\nwhile (distanceToTarget > 0) {\n    System.out.println(\"Distance remaining: \" + distanceToTarget + \" cm\");\n    distanceToTarget -= speed;  // Move closer to target\n    \n    // Slow down as we approach\n    if (distanceToTarget < 20) {\n        speed = 5.0;\n    }\n}\n\nSystem.out.println(\"Target reached!\");"
    },
    {
      "type": "exercise-box",
      "title": "Try It Yourself:",
      "subtitle": "Exercise 1: While Loop Practice",
      "content": "Practice creating different types of while loops:",
      "tasks": [
        "Create a simple counting loop that prints numbers 1 to 10",
        "Build a robot battery monitor using while(true) and break",
        "Make a number guessing game with user input validation",
        "Create a sensor reading loop that stops when target value is reached"
      ],
      "answers": [
        {
          "task": "Create a simple counting loop that prints numbers 1 to 10",
          "code": "public class CountingLoop {\n    public static void main(String[] args) {\n        // Method 1: Using while with condition\n        System.out.println(\"=== Counting 1 to 10 (Conditional While) ===\");\n        int count = 1;\n        \n        while (count <= 10) {\n            System.out.println(\"Count: \" + count);\n            count++;\n        }\n        \n        System.out.println(\"Counting complete!\");\n        \n        // Method 2: Using while(true) with break\n        System.out.println(\"\\n=== Counting 1 to 10 (Infinite While + Break) ===\");\n        int num = 1;\n        \n        while (true) {\n            System.out.println(\"Number: \" + num);\n            \n            if (num >= 10) {\n                break;\n            }\n            \n            num++;\n        }\n        \n        System.out.println(\"Break counting complete!\");\n        \n        // Robot example: Motor speed ramp\n        System.out.println(\"\\n=== Robot Motor Speed Ramp ===\");\n        int motorSpeed = 0;\n        \n        while (motorSpeed < 100) {\n            System.out.println(\"Motor speed: \" + motorSpeed + \"%\");\n            motorSpeed += 10;  // Increase by 10% each step\n            \n            // Simulate delay\n            try {\n                Thread.sleep(200);\n            } catch (InterruptedException e) {\n                break;\n            }\n        }\n        \n        System.out.println(\"Motor at full speed: \" + motorSpeed + \"%\");\n    }\n}"
        },
        {
          "task": "Build a robot battery monitor using while(true) and break",
          "code": "import java.util.Scanner;\n\npublic class BatteryMonitor {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        double currentVoltage = 12.6;  // Starting voltage\n        int readingCount = 0;\n        double totalVoltage = 0.0;\n        int lowBatteryWarnings = 0;\n        \n        System.out.println(\"=== Robot Battery Monitor ===\");\n        System.out.println(\"Commands: 'reading' to simulate reading, 'exit' to quit\");\n        System.out.println(\"Current battery: \" + currentVoltage + \"V\");\n        \n        while (true) {\n            System.out.print(\"\\nBattery Monitor> \");\n            String command = scanner.nextLine().trim().toLowerCase();\n            \n            // Exit condition\n            if (command.equals(\"exit\") || command.equals(\"quit\")) {\n                System.out.println(\"Battery monitoring stopped.\");\n                break;\n            }\n            \n            // Simulate battery reading\n            if (command.equals(\"reading\")) {\n                // Simulate voltage drop over time\n                currentVoltage -= (Math.random() * 0.1 + 0.05);\n                readingCount++;\n                totalVoltage += currentVoltage;\n                \n                System.out.println(\"📊 Battery Reading #\" + readingCount);\n                System.out.println(\"Voltage: \" + String.format(\"%.2f\", currentVoltage) + \"V\");\n                \n                // Battery status analysis\n                if (currentVoltage >= 12.0) {\n                    System.out.println(\"🟢 Battery Status: GOOD\");\n                } else if (currentVoltage >= 11.5) {\n                    System.out.println(\"🟡 Battery Status: MODERATE\");\n                } else if (currentVoltage >= 11.0) {\n                    System.out.println(\"🟠 Battery Status: LOW\");\n                    lowBatteryWarnings++;\n                } else {\n                    System.out.println(\"🔴 Battery Status: CRITICAL - STOP ROBOT!\");\n                    lowBatteryWarnings++;\n                    System.out.println(\"⚠️ Automatic shutdown triggered!\");\n                    break;  // Critical battery - emergency stop\n                }\n                \n                // Show average\n                if (readingCount > 0) {\n                    double average = totalVoltage / readingCount;\n                    System.out.println(\"Average voltage: \" + String.format(\"%.2f\", average) + \"V\");\n                }\n                \n            } else if (command.equals(\"status\")) {\n                System.out.println(\"\\n=== Battery Status Report ===\");\n                System.out.println(\"Current voltage: \" + String.format(\"%.2f\", currentVoltage) + \"V\");\n                System.out.println(\"Readings taken: \" + readingCount);\n                System.out.println(\"Low battery warnings: \" + lowBatteryWarnings);\n                \n            } else if (command.equals(\"help\")) {\n                System.out.println(\"\\nAvailable commands:\");\n                System.out.println(\"  reading - Take a battery voltage reading\");\n                System.out.println(\"  status  - Show battery status report\");\n                System.out.println(\"  exit    - Exit battery monitor\");\n                System.out.println(\"  help    - Show this help\");\n                \n            } else {\n                System.out.println(\"❌ Unknown command: \" + command);\n                System.out.println(\"Type 'help' for available commands.\");\n            }\n        }\n        \n        // Final report\n        System.out.println(\"\\n=== Final Battery Report ===\");\n        System.out.println(\"Total readings: \" + readingCount);\n        System.out.println(\"Final voltage: \" + String.format(\"%.2f\", currentVoltage) + \"V\");\n        System.out.println(\"Low battery warnings: \" + lowBatteryWarnings);\n        \n        if (readingCount > 0) {\n            double average = totalVoltage / readingCount;\n            System.out.println(\"Average voltage: \" + String.format(\"%.2f\", average) + \"V\");\n        }\n        \n        System.out.println(\"Battery monitor shutdown complete.\");\n    }\n}"
        },
        {
          "task": "Make a number guessing game with user input validation",
          "code": "import java.util.Scanner;\nimport java.util.Random;\n\npublic class NumberGuessingGame {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Random random = new Random();\n        \n        // Game setup\n        int targetNumber = random.nextInt(100) + 1;  // 1-100\n        int attempts = 0;\n        int maxAttempts = 7;\n        boolean gameWon = false;\n        \n        System.out.println(\"=== Robot Sensor Calibration Game ===\");\n        System.out.println(\"The robot sensor needs calibration!\");\n        System.out.println(\"Guess the correct sensor value (1-100)\");\n        System.out.println(\"You have \" + maxAttempts + \" attempts.\");\n        \n        while (true) {\n            System.out.print(\"\\nAttempt \" + (attempts + 1) + \" of \" + maxAttempts + \": \");\n            String input = scanner.nextLine().trim();\n            \n            // Check for quit command\n            if (input.equalsIgnoreCase(\"quit\") || input.equalsIgnoreCase(\"exit\")) {\n                System.out.println(\"Game ended. The sensor value was: \" + targetNumber);\n                break;\n            }\n            \n            // Validate input\n            int guess;\n            try {\n                guess = Integer.parseInt(input);\n            } catch (NumberFormatException e) {\n                System.out.println(\"❌ Invalid input! Please enter a number (1-100) or 'quit'\");\n                continue;  // Don't count invalid inputs as attempts\n            }\n            \n            // Check range\n            if (guess < 1 || guess > 100) {\n                System.out.println(\"❌ Out of range! Enter a number between 1 and 100.\");\n                continue;  // Don't count out-of-range as attempts\n            }\n            \n            // Count valid attempt\n            attempts++;\n            \n            // Check guess\n            if (guess == targetNumber) {\n                gameWon = true;\n                System.out.println(\"🎉 CORRECT! Sensor calibrated successfully!\");\n                System.out.println(\"You found the value \" + targetNumber + \" in \" + attempts + \" attempts.\");\n                break;\n                \n            } else if (guess < targetNumber) {\n                int difference = targetNumber - guess;\n                System.out.println(\"📈 Too low! Sensor needs higher calibration.\");\n                \n                if (difference <= 5) {\n                    System.out.println(\"🔥 Very close! You're within 5 points.\");\n                } else if (difference <= 15) {\n                    System.out.println(\"⚡ Getting warmer!\");\n                }\n                \n            } else {\n                int difference = guess - targetNumber;\n                System.out.println(\"📉 Too high! Sensor needs lower calibration.\");\n                \n                if (difference <= 5) {\n                    System.out.println(\"🔥 Very close! You're within 5 points.\");\n                } else if (difference <= 15) {\n                    System.out.println(\"⚡ Getting warmer!\");\n                }\n            }\n            \n            // Check if attempts exhausted\n            if (attempts >= maxAttempts) {\n                System.out.println(\"\\n💥 Game Over! No more attempts remaining.\");\n                System.out.println(\"The correct sensor value was: \" + targetNumber);\n                break;\n            }\n            \n            // Show remaining attempts\n            int remaining = maxAttempts - attempts;\n            System.out.println(\"Attempts remaining: \" + remaining);\n        }\n        \n        // Game summary\n        System.out.println(\"\\n=== Game Summary ===\");\n        System.out.println(\"Target value: \" + targetNumber);\n        System.out.println(\"Attempts used: \" + attempts);\n        \n        if (gameWon) {\n            if (attempts == 1) {\n                System.out.println(\"🏆 PERFECT! First try calibration!\");\n            } else if (attempts <= 3) {\n                System.out.println(\"⭐ EXCELLENT! Quick calibration!\");\n            } else if (attempts <= 5) {\n                System.out.println(\"✅ GOOD! Efficient calibration.\");\n            } else {\n                System.out.println(\"✅ SUCCESS! Sensor calibrated.\");\n            }\n        } else {\n            System.out.println(\"❌ Calibration failed. Try again!\");\n        }\n        \n        System.out.println(\"Calibration session complete.\");\n    }\n}"
        },
        {
          "task": "Create a sensor reading loop that stops when target value is reached",
          "code": "import java.util.Random;\n\npublic class SensorTargetLoop {\n    public static void main(String[] args) {\n        Random random = new Random();\n        \n        // Target sensor configuration\n        final double TARGET_VALUE = 75.0;\n        final double TOLERANCE = 2.0;  // ±2.0 tolerance\n        final int MAX_READINGS = 20;\n        \n        // Sensor simulation variables\n        double currentReading = 50.0;  // Starting point\n        int readingCount = 0;\n        boolean targetReached = false;\n        \n        System.out.println(\"=== Robot Sensor Target Detection ===\");\n        System.out.println(\"Target value: \" + TARGET_VALUE);\n        System.out.println(\"Tolerance: ±\" + TOLERANCE);\n        System.out.println(\"Acceptable range: \" + (TARGET_VALUE - TOLERANCE) + \" - \" + (TARGET_VALUE + TOLERANCE));\n        System.out.println(\"Maximum readings: \" + MAX_READINGS);\n        System.out.println(\"\\nStarting sensor readings...\");\n        \n        // Main sensor reading loop\n        while (!targetReached && readingCount < MAX_READINGS) {\n            readingCount++;\n            \n            // Simulate sensor reading with gradual approach to target\n            double adjustment = (TARGET_VALUE - currentReading) * 0.3;  // 30% correction\n            double noise = (random.nextDouble() - 0.5) * 4.0;  // ±2.0 noise\n            currentReading += adjustment + noise;\n            \n            // Ensure reading stays in realistic range\n            if (currentReading < 0) currentReading = 0;\n            if (currentReading > 100) currentReading = 100;\n            \n            System.out.println(\"Reading #\" + String.format(\"%2d\", readingCount) + \n                             \": \" + String.format(\"%6.2f\", currentReading));\n            \n            // Check if target is reached\n            double difference = Math.abs(currentReading - TARGET_VALUE);\n            \n            if (difference <= TOLERANCE) {\n                targetReached = true;\n                System.out.println(\"🎯 TARGET REACHED!\");\n                System.out.println(\"   Target: \" + TARGET_VALUE);\n                System.out.println(\"   Actual: \" + String.format(\"%.2f\", currentReading));\n                System.out.println(\"   Difference: \" + String.format(\"%.2f\", difference));\n            } else {\n                // Provide guidance\n                if (difference <= 5.0) {\n                    System.out.println(\"   🔥 Very close! (\" + String.format(\"%.2f\", difference) + \" away)\");\n                } else if (difference <= 10.0) {\n                    System.out.println(\"   ⚡ Getting closer (\" + String.format(\"%.2f\", difference) + \" away)\");\n                } else {\n                    if (currentReading < TARGET_VALUE) {\n                        System.out.println(\"   📈 Need higher value\");\n                    } else {\n                        System.out.println(\"   📉 Need lower value\");\n                    }\n                }\n            }\n            \n            // Simulate processing delay\n            try {\n                Thread.sleep(300);  // 300ms delay\n            } catch (InterruptedException e) {\n                System.out.println(\"Reading interrupted!\");\n                break;\n            }\n        }\n        \n        // Final results\n        System.out.println(\"\\n=== Sensor Detection Results ===\");\n        System.out.println(\"Total readings taken: \" + readingCount);\n        System.out.println(\"Final sensor value: \" + String.format(\"%.2f\", currentReading));\n        System.out.println(\"Target value: \" + TARGET_VALUE);\n        System.out.println(\"Final difference: \" + String.format(\"%.2f\", Math.abs(currentReading - TARGET_VALUE)));\n        \n        if (targetReached) {\n            System.out.println(\"\\n✅ SUCCESS: Target reached in \" + readingCount + \" readings!\");\n            \n            if (readingCount <= 5) {\n                System.out.println(\"🏆 EXCELLENT: Very fast convergence!\");\n            } else if (readingCount <= 10) {\n                System.out.println(\"⭐ GOOD: Quick convergence\");\n            } else {\n                System.out.println(\"✅ ACCEPTABLE: Target achieved\");\n            }\n        } else {\n            System.out.println(\"\\n❌ FAILED: Target not reached within \" + MAX_READINGS + \" readings\");\n            System.out.println(\"Consider adjusting sensor parameters or increasing reading limit.\");\n        }\n        \n        System.out.println(\"Sensor detection complete.\");\n    }\n}"
        }
      ]
    }
  ]
} 